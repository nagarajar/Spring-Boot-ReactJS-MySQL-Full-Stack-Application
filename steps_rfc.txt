Spring-Boot-React-MySQL-Full-Stack-App

Backend API Details
Application Name: spring-boot-back-end-app

Tools & Technologies:
	1. Spring Boot 3.1.x
	2. Spring Data JPA
	3. Maven 3.11.x
	4. JDK 17
	5. Embedded Tomcat 10.1.x
	6. MySQL Database
	7. STS IDE

Rest API's: base url = "http://localhost:9090/api/v1/employee/"
	1. Post  : "create"
	2. Put   : "update/{id}"
	3. Get   : "all"
	4. Get   : "{id}"
	5. Delete: "{id}"

Frontend API Details
Application Name: react-rfc-front-end-app (Implemented using Functional Component)

Tools & Technologies:
	1. React 18.2.x
	2. JavaScript(ES6)
	3. Node JS and NPM 18.12.x
	4. VS Code IDE
	5. Create react app CLI
	6. Bootstrap
	7. Axios HTTP Library


Eniromental Setup: 

	1. Node JS
	   Download: https://nodejs.org/en
	   install
	   verify: cmd: node --version

	2. VS Code
	   Download: https://code.visualstudio.com/
	   install
	   
	3. Create React App
	   cmd: npx create-react-app react-rfc-front-end-app
	   start app: npm start
	
	4. Install Reactjs code snippets & prettier in VS Code 
		Click -> Extensions 
			-> Search 
			-> es7  -> ES7 React/Redux/GraphQL/React-Native snippets -> install first one or (check name: rodrigovallades)
			-> prettier -> Prettier - Code formatter -> install -> click on Setting -> search save -> check format on save

	5. Install axios for third party api communication
		cmd: npm i axios
		verify the dependency in package.json 

	6. Install Bootstrap 
	   1st way: 
		take cdn from : https://getbootstrap.com/docs/5.0/getting-started/introduction/
		insert in index.html under head tag

	   2nd Way:
		cmd: npm install bootstrap --save
		verify the dependency in package.json
		index.js: import 'bootstrap/dist/css/bootstrap.min.css'

	7. Install router for navigation
		cmd: npm install react-router-dom
		verify the dependency in package.json

	8. Install react-icons instead of using button
		cmd: npm install react-icons
		verify the dependency in package.json

Implementations Steps:
1. Home.js -> short cut for code snippet -> rafce
Create a folder: components under src -> create below components under components folder
	2. EmployeeListComponent.js
	   Refer table classes -> https://getbootstrap.com/docs/4.1/content/tables/
	5. AddEmployee.js

Create a folder: common under src -> create below components under components folder
	3. NavBar.js  -> short cut for code snippet -> rafce
	   Refer code -> https://getbootstrap.com/docs/4.1/components/navbar/ here and use it as per our requirement.
	   import {Link} from 'react-router-dom';

	4. Configure router in app.js
		import { BrowserRouter as Router, Route, Routes } from "react-router-dom";
		Routes is to handle single navigation at a time.

Create a folder: serices under src -> create below js under services folder
	1. EmployeeService.js : Here we can call the third party rest apis like(Post, Put, Get, Delete)
	Note:
		Problem: CORS policy: No 'Access-Control-Allow-Origin'
		Solution: @CrossOrigin(origins = "http://localhost:3000") add in backed api controller class

		

Note: 
	1. package.json -> contains the version and dependency related information.
	2. node_modules -> contains all the files related to the node js
	3. Application Execution Flow: index.html -> index.js -> App.js


Git:
echo "# Spring-Boot-ReactJS-MySQL-Full-Stack-App" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/nagarajar/Spring-Boot-ReactJS-MySQL-Full-Stack-App.git
git push -u origin main